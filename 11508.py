'''
문제
편의점에서 '2+1 세일'하는 행사를 하고 있다. 3개를 한 번에 산다면 그중에서 가장 싼 것은 무료로 지불하고 나머지 두 개의 제품 가격만 지불하면 된다. 한 번에 3개의 제품을 사지 않는다면 할인 없이 정가를 지불해야 한다.

예를 들어, 7개의 제품이 있어서 각 제품의 가격이 10, 9, 4, 2, 6, 4, 3이고 (10, 3, 2), (4, 6, 4), (9)로 총 3번에 걸쳐서 물건을 산다면 첫 번째 꾸러미에서는 13원을, 두 번째 꾸러미에서는 10원을, 세 번째 꾸러미에서는 9원을 지불해야 한다.

총 N개의 제품을 구입하려고 할 때, 최소비용을 구하는 프로그램을 작성하시오.

입력
첫 번째 줄에는 제품의 수 N (1 ≤ N ≤ 100,000)이 주어진다.
두 번째 줄부터 N개의 줄에는 각 제품의 가격 Ci (1 ≤ Ci ≤ 100,000)가 주어진다.

출력
N개의 제품을 모두 살 때 필요한 최소비용을 출력한다. 정답은 2^{31}-1보다 작거나 같다.
'''

from sys import stdin
input = stdin.readline
n = int(input())
a = []
for _ in range(n):
  a.append(int(input()))
a.sort(reverse=True)

k = n//3
if k != n/3:
  k += 1

total = 0
for i in range(k):
  total += sum(a[3*i: 3*(i+1)-1])

print(total)
