'''
문제
나무 M미터가 필요하다. 정부는 나무 한 줄에 대한 벌목 허가를 내주었다. 목재절단기는 다음과 같이 동작한다. 먼저, 절단기에 높이 H를 지정해야 한다. 높이를 지정하면 톱날이 땅으로부터 H미터 위로 올라간다. 그 다음, 한 줄에 연속해있는 나무를 모두 절단해버린다. 따라서, 높이가 H보다 큰 나무는 H 위의 부분이 잘릴 것이고, 낮은 나무는 잘리지 않을 것이다. 예를 들어, 한 줄에 연속해있는 나무의 높이가 20, 15, 10, 17이라고 하자. 높이를 15로 지정했다면, 나무를 자른 뒤의 높이는 15, 15, 10, 15가 될 것이고, 길이가 5인 나무와 2인 나무를 가져갈 것이다. (총 7미터를 가져간다) 절단기에 설정할 수 있는 높이는 양의 정수 또는 0이다. 나무를 필요한 만큼만 가져가려고 한다. 적어도 M미터의 나무를 가져가기 위해서 절단기에 설정할 수 있는 높이의 최댓값을 구하는 프로그램을 작성하시오.

입력
첫째 줄에 나무의 수 N과 가져가려고 하는 나무의 길이 M이 주어진다. (1 ≤ N ≤ 1,000,000, 1 ≤ M ≤ 2,000,000,000)

둘째 줄에는 나무의 높이가 주어진다. 나무의 높이의 합은 항상 M보다 크거나 같기 때문에, 필요한 나무를 가져갈 수 있다. 높이는 1,000,000,000보다 작거나 같은 양의 정수 또는 0이다.

출력
적어도 M미터의 나무를 가져가기 위해서 절단기에 설정할 수 있는 높이의 최댓값을 출력한다.
'''

n, csum = map(int, input().split())
ar = list(map(int, input().split()))
ar.sort(reverse=True)

def cutsum(h):
  sum = 0
  for i in range(n):
    diff = ar[i]-h
    if diff > 0:
      sum += diff
    else:
      break
  return sum

minh, maxh = 0, ar[0]
h = 0
while minh <= maxh:
  h = (minh+maxh)//2
  csumh = cutsum(h)
  # print(f"({minh}, {h}, {maxh})", csumh, csum)
  if csumh >= csum:
    # print("h:", h)
    minh = h+1
  else:
    maxh = h-1

print(maxh)
