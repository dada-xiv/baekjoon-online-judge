'''
문제
이 도시에는 도시를 동쪽과 서쪽으로 나누는 큰 일직선 모양의 강이 흐르고 있다. 강 주변에서 다리를 짓기에 적합한 곳을 사이트라고 한다. 강의 서쪽에는 N개의 사이트가 있고 동쪽에는 M개의 사이트가 있다. (N ≤ M)서쪽의 사이트와 동쪽의 사이트를 다리로 연결하려고 한다. (이때 한 사이트에는 최대 한 개의 다리만 연결될 수 있다.) 다리를 최대한 많이 지으려고 하기 때문에 서쪽의 사이트 개수만큼 (N개) 다리를 지으려고 한다. 

다리끼리는 서로 겹쳐질 수 없다고 할 때, 다리를 지을 수 있는 경우의 수를 구하는 프로그램을 작성하라.

입력
입력의 첫 줄에는 테스트 케이스의 개수 T가 주어진다. 그 다음 줄부터 각각의 테스트케이스에 대해 강의 서쪽과 동쪽에 있는 사이트의 개수 정수 N, M (0 < N ≤ M < 30)이 주어진다.

출력
각 테스트 케이스에 대해 주어진 조건하에 다리를 지을 수 있는 경우의 수를 출력한다.

cf) injective 함수는 P(M,N)이지만, 다리가 서로 겹쳐질 수 없기 때문에 조합인 C(M,N)으로 충분하다. 이때 나올 수 있는 최대의 수는 C(30,15)이며, 이는 2^31-1보다 작은 수이다.
'''

def factorial(n):
    res = 1
    for k in range(1, n+1):
        res *= k
    return res

def Binomial(n, r):
    return int(factorial(n)/(factorial(r)*factorial(n-r)))

T = int(input())
for _ in range(T):
    N, M = map(int, input().split())
    print(Binomial(M, N))
